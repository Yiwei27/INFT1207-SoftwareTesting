# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTest6lab4ShibinYiwei():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test6lab4ShibinYiwei(self):
    self.driver.get("https://www.calculator.net/body-fat-calculator.html")
    self.driver.set_window_size(1035, 696)
    self.driver.find_element(By.NAME, "cage").click()
    self.driver.find_element(By.NAME, "cage").clear()
    self.driver.find_element(By.NAME, "cage").send_keys("g")
    self.driver.find_element(By.NAME, "cweightkgs").click()
    self.driver.find_element(By.NAME, "cweightkgs").clear()
    self.driver.find_element(By.NAME, "cweightkgs").send_keys("w")
    self.driver.find_element(By.ID, "cheightmeter").click()
    self.driver.find_element(By.ID, "cheightmeter").clear()
    self.driver.find_element(By.ID, "cheightmeter").send_keys("lk")
    self.driver.find_element(By.ID, "cneckmeter").click()
    self.driver.find_element(By.ID, "cneckmeter").clear()
    self.driver.find_element(By.ID, "cneckmeter").send_keys("op")
    self.driver.find_element(By.ID, "cwaistmeter").click()
    self.driver.find_element(By.ID, "cwaistmeter").clear()
    self.driver.find_element(By.ID, "cwaistmeter").send_keys("pd")


    self.driver.find_element(By.NAME, "x").click()
    body_text = self.driver.find_element(By.TAG_NAME, "body").text
    assert "Please provide a positive age." in body_text
    assert "Please provide a positive weight." in body_text
    assert "Height need to be positive." in body_text
    assert "Neck need to be numeric." in body_text
    assert "Waist need to be numeric." in body_text
    print("Test Case Result:", "Validation messages displayed correctly.")

  
